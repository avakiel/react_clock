{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timeId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","props","debug","clockName","clearInterval","className","React","PureComponent","App","hasClock","timerId","getRandomName","value","now","toString","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAcqBA,E,4MACnBC,MAAe,CACbC,KAAM,IAAIC,M,EAGZC,OAAS,E,uDAET,WAA2B,IAAD,OACxBC,KAAKD,OAASE,OAAOC,aAAY,WAC/B,EAAKC,UAAS,WACZ,MAAO,CACLN,KAAM,IAAIC,SAGdM,QAAQC,KAAK,EAAKT,MAAMC,KAAKS,cAAcC,OAAO,IAAK,MACtD,O,gCAGL,SAAmBC,GACbA,IAAcR,KAAKS,OACrBL,QAAQM,MAAR,uBAA8BF,EAAUG,UAAxC,eAAwDX,KAAKS,MAAME,c,kCAIvE,WACEV,OAAOW,cAAcZ,KAAKD,U,oBAG5B,WACE,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGb,KAAKS,MAAME,YAGb,YAED,sBAAME,UAAU,cAAhB,SACGb,KAAKJ,MAAMC,KAAKS,cAAcC,OAAO,IAAK,Y,GAtClBO,IAAMC,eCL5BC,EAAb,4MACEpB,MAAc,CACZe,UAAW,UACXM,UAAU,GAHd,EAMEC,QAAU,EANZ,EA4BEC,cAAgB,WACd,IAAMC,EAAQtB,KAAKuB,MAAMC,WAAWf,OAAO,GAE3C,MAAM,SAAN,OAAgBa,IA/BpB,uDAQE,WAA2B,IAAD,OACxBpB,KAAKkB,QAAUjB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEQ,UAAW,EAAKQ,oBAC/B,MAEHI,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAEN,EAAKvB,SAAS,CAAEc,UAAU,OAG5BM,SAASC,iBAAiB,SAAS,WACjC,EAAKrB,SAAS,CAAEc,UAAU,SApBhC,kCAwBE,WACEhB,OAAOW,cAAcZ,KAAKkB,WAzB9B,oBAkCE,WACE,OACE,sBAAKL,UAAU,MAAf,UACE,6CACCb,KAAKJ,MAAMqB,SACR,cAAC,EAAD,CAAON,UAAWX,KAAKJ,MAAMe,YAAgB,oCAvCzD,GAAyBG,IAAMC,eCN/BY,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.a185b7ab.chunk.js","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable react/no-unused-state */\n/* eslint-disable react/prefer-stateless-function */\n// eslint-disable-next-line import/no-duplicates\nimport React from 'react';\n\ntype State = {\n  date: Date\n};\n\ntype ClockProps = {\n  clockName: string\n};\n\nexport default class Clock extends React.PureComponent<ClockProps> {\n  state: State = {\n    date: new Date(),\n  };\n\n  timeId = 0;\n\n  componentDidMount(): void {\n    this.timeId = window.setInterval(() => {\n      this.setState(() => {\n        return {\n          date: new Date(),\n        };\n      });\n      console.info(this.state.date.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<ClockProps>): void {\n    if (prevProps !== this.props) {\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timeId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.date.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport Clock from './Clock';\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nexport class App extends React.PureComponent {\n  state:State = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: this.getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  getRandomName = () => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock\n          ? <Clock clockName={this.state.clockName} /> : <></>}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}